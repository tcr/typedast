==== tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassIncludesInheritedMembers.ts (4 errors) ====
    class Base {
        a: string;
        b() { }
        get c() { return ''; }
            ~
!!! Accessors are only available when targeting ECMAScript 5 and higher.
        set c(v) { }
            ~
!!! Accessors are only available when targeting ECMAScript 5 and higher.
    
        static r: string;
        static s() { }
        static get t() { return ''; }
                   ~
!!! Accessors are only available when targeting ECMAScript 5 and higher.
        static set t(v) { }
                   ~
!!! Accessors are only available when targeting ECMAScript 5 and higher.
    
        constructor(x) { }
    }
    
    class Derived extends Base {
    }
    
    var d: Derived = new Derived(1);
    var r1 = d.a;
    var r2 = d.b();
    var r3 = d.c;
    d.c = '';
    var r4 = Derived.r;
    var r5 = Derived.s();
    var r6 = Derived.t;
    Derived.t = '';
    
    class Base2 {
        [x: string]: Object;
        [x: number]: Date;
    }
    
    class Derived2 extends Base2 {
    }
    
    var d2: Derived2;
    var r7 = d2[''];
    var r8 = d2[1];
    
    