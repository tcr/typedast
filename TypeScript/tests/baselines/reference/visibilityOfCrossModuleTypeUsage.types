=== tests/cases/compiler/visibilityOfCrossModuleTypeUsage_fs.ts ===
import commands = require('visibilityOfCrossModuleTypeUsage_commands');
>commands : typeof "tests/cases/compiler/visibilityOfCrossModuleTypeUsage_commands"

function run(configuration: commands.IConfiguration) {
>run : (configuration: IConfiguration) => void
>configuration : IConfiguration
>commands : commands
>IConfiguration : IConfiguration

    var absoluteWorkspacePath = configuration.workspace.toAbsolutePath(configuration.server);
>absoluteWorkspacePath : string
>configuration.workspace.toAbsolutePath(configuration.server) : string
>configuration.workspace.toAbsolutePath : (server: IServer, workspaceRelativePath?: string) => string
>configuration.workspace : IWorkspace
>configuration : IConfiguration
>workspace : IWorkspace
>toAbsolutePath : (server: IServer, workspaceRelativePath?: string) => string
>configuration.server : IServer
>configuration : IConfiguration
>server : IServer
}
=== tests/cases/compiler/visibilityOfCrossModuleTypeUsage_commands.ts ===
//visibilityOfCrossModuleTypeUsage

import fs = require('visibilityOfCrossModuleTypeUsage_fs');
>fs : typeof "tests/cases/compiler/visibilityOfCrossModuleTypeUsage_fs"

import server = require('visibilityOfCrossModuleTypeUsage_server');
>server : typeof "tests/cases/compiler/visibilityOfCrossModuleTypeUsage_server"

export interface IConfiguration {
>IConfiguration : IConfiguration

    workspace: server.IWorkspace;
>workspace : IWorkspace
>server : server
>IWorkspace : IWorkspace

    server?: server.IServer;
>server : IServer
>server : server
>IServer : IServer
}

=== tests/cases/compiler/visibilityOfCrossModuleTypeUsage_server.ts ===
export interface IServer {
>IServer : IServer
}

export interface IWorkspace {
>IWorkspace : IWorkspace

    toAbsolutePath(server: IServer, workspaceRelativePath?: string): string;
>toAbsolutePath : (server: IServer, workspaceRelativePath?: string) => string
>server : IServer
>IServer : IServer
>workspaceRelativePath : string
}

