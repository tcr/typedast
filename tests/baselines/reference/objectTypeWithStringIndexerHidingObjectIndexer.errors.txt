==== tests/cases/conformance/types/members/objectTypeWithStringIndexerHidingObjectIndexer.ts (7 errors) ====
    // object types can define string indexers that are more specific than the default 'any' that would be returned
    // no errors expected below 
    
    interface Object {
        [x: string]: Object;
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'constructor' of type 'Function' is not assignable to string index type 'Object'.
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'hasOwnProperty' of type '(v: string) => boolean' is not assignable to string index type 'Object'.
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'isPrototypeOf' of type '(v: Object) => boolean' is not assignable to string index type 'Object'.
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'propertyIsEnumerable' of type '(v: string) => boolean' is not assignable to string index type 'Object'.
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'toLocaleString' of type '() => string' is not assignable to string index type 'Object'.
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'toString' of type '() => string' is not assignable to string index type 'Object'.
        ~~~~~~~~~~~~~~~~~~~~
!!! Property 'valueOf' of type '() => Object' is not assignable to string index type 'Object'.
    }
    var o = {};
    var r = o['']; // should be Object
    
    class C {
        foo: string;
        [x: string]: string;
    }
    var c: C;
    var r2: string = c[''];
    
    interface I {
        bar: string;
        [x: string]: string;
    }
    var i: I;
    var r3: string = i[''];
    
    var o2: {
        baz: string;
        [x: string]: string;
    }
    var r4: string = o2[''];
    
    
    