==== tests/cases/compiler/noImplicitAnyParametersInAmbientFunctions.ts (22 errors) ====
    
    // No implicit-'any' errors.
    declare function d_f1(): void;
    
    // Implicit-'any' errors for x.
    declare function d_f2(x): void;
                          ~
!!! Parameter 'x' implicitly has an 'any' type.
    
    // No implicit-'any' errors.
    declare function d_f3(x: any): void;
    
    // Implicit-'any' errors for x, y, and z.
    declare function d_f4(x, y, z): void;
                          ~
!!! Parameter 'x' implicitly has an 'any' type.
                             ~
!!! Parameter 'y' implicitly has an 'any' type.
                                ~
!!! Parameter 'z' implicitly has an 'any' type.
    
    // Implicit-'any' errors for x, and z.
    declare function d_f5(x, y: any, z): void;
                          ~
!!! Parameter 'x' implicitly has an 'any' type.
                                     ~
!!! Parameter 'z' implicitly has an 'any' type.
    
    // Implicit-'any[]' errors for r.
    declare function d_f6(...r): void;
                          ~~~~
!!! Rest parameter 'r' implicitly has an 'any[]' type.
    
    // Implicit-'any'/'any[]' errors for x, r.
    declare function d_f7(x, ...r): void;
                          ~
!!! Parameter 'x' implicitly has an 'any' type.
                             ~~~~
!!! Rest parameter 'r' implicitly has an 'any[]' type.
    
    // Implicit-'any' errors for x1, y2, x3, and y3.
    declare function d_f8(x1, y1: number): any;
                          ~~
!!! Parameter 'x1' implicitly has an 'any' type.
    declare function d_f8(x2: string, y2): any;
                                      ~~
!!! Parameter 'y2' implicitly has an 'any' type.
    declare function d_f8(x3, y3): any;
                          ~~
!!! Parameter 'x3' implicitly has an 'any' type.
                              ~~
!!! Parameter 'y3' implicitly has an 'any' type.
    
    // No implicit-'any' errors.
    declare var d_f9: () => string;
    
    // Implicit-'any' error for x.
    declare var d_f10: (x) => string;
                        ~
!!! Parameter 'x' implicitly has an 'any' type.
    
    // Implicit-'any' errors for x, y, and z.
    declare var d_f11: (x, y, z) => string;
                        ~
!!! Parameter 'x' implicitly has an 'any' type.
                           ~
!!! Parameter 'y' implicitly has an 'any' type.
                              ~
!!! Parameter 'z' implicitly has an 'any' type.
    
    // Implicit-'any' errors for x and z.
    declare var d_f12: (x, y: any, z) => string;
                        ~
!!! Parameter 'x' implicitly has an 'any' type.
                                   ~
!!! Parameter 'z' implicitly has an 'any' type.
    
    // Implicit-'any[]' error for r.
    declare var d_f13: (...r) => string;
                        ~~~~
!!! Rest parameter 'r' implicitly has an 'any[]' type.
    
    // Implicit-'any'/'any[]' errors for x, r.
    declare var d_f14: (x, ...r) => string;
                        ~
!!! Parameter 'x' implicitly has an 'any' type.
                           ~~~~
!!! Rest parameter 'r' implicitly has an 'any[]' type.